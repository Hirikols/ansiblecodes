---
- hosts: all
  become: yes
  tasks:
    - name: "Install EPEL-release"
      yum: 
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
        state: present
      tags: packages

    - name: "Install Python"
      yum: 
        name: python-pip
      tags: packages

    - name: "Install PostgreSQL"
      yum:
        name: 
          - postgresql
          - postgresql-server
          - python-psycopg2
      tags: packages

    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: "Initialize PostgreSQL"
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists

    - name: "Start and enable services"
      service: name=postgresql state=started enabled=yes
    
    
    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: "/var/lib/pgsql/data/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: all
        source: 0.0.0.0/0
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres

    - name: "remove ident 127.0.0.1/32 connection"
      postgresql_pg_hba: 
        dest: "/var/lib/pgsql/data/pg_hba.conf"
        contype: host
        databases: all
        method: ident
        users: all 
        source: 127.0.0.1/32
        state: absent

    - name: "Set listen_address to *"
      lineinfile: 
        dest: /var/lib/pgsql/data/postgresql.conf
        regexp: "#listen_addresses = 'localhost'" 
        line: "listen_addresses = '*'" 
        state: present
      notify: restart postgres
      
    - name: "Set localhost connection to trust *"
      postgresql_pg_hba:
        dest: "/var/lib/pgsql/data/pg_hba.conf"
        contype: local
        databases: all
        method: trust
        users: all
        state: present
      notify: restart postgres

    - name: "Restart postgresql"
      service: name=postgresql state=restarted 

    - name: "Open 5432/tcp port"
      firewalld:
        port: 5432/tcp
        permanent: yes
        state: enabled
        immediate: yes

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "gitbucket"
        password: "gitbucket"
      become: yes
      become_user: postgres

    - name: "Create database"
      postgresql_db:
        state: present
        name: gitbucket
        owner: gitbucket

    - name: "Copy sql dump file"
      copy:
        src: /etc/ansible/gitbucket.sql
        dest: /tmp/gitbucket.sql
        mode: '0644'

    - name: "Fill database from dump file"
      postgresql_db:
        name: "gitbucket"
        state: restore
        target: /tmp/gitbucket.sql
   
    - name: Install Bucardo dependencies
      yum:
        name: 
          - perl-devel 
          - perl-boolean
          - perl-DBD-Pg
          - postgresql-plperl
          - expect
          - perl-Sys-Syslog
        state: present
      tags: packages


    - name: Get dbix_safe
      get_url: 
        url: https://bucardo.org/downloads/dbix_safe.tar.gz 
        dest: /tmp/dbix_safe.tar.gz 
      tags: packages

    - name: Create temporary directory
      file: 
        state: directory
        path: /tmp/dbix
      tags: packages

    - name: Unarchive Dbix_safe
      unarchive:
        src: /tmp/dbix_safe.tar.gz
        dest: /tmp/dbix
        copy: no
      tags: packages

    - name: Build Dbix MakeFile
      shell: "perl Makefile.PL"
      args:
        chdir: /tmp/dbix/DBIx-Safe-1.2.5/
      tags: packages

    - name: Make Dbix
      shell: "make"
      args:
        chdir: /tmp/dbix/DBIx-Safe-1.2.5/
      tags: packages

    - name: Install Dbix
      shell: "sudo make install"
      args:
        chdir: /tmp/dbix/DBIx-Safe-1.2.5/
      tags: packages

    - name: Download Bucardo
      get_url:
        url: http://bucardo.org/downloads/Bucardo-5.3.1.tar.gz
        dest: /tmp/bucardo.tar.gz
      tags: packages

    - name: Create temporary directory
      file:
        state: directory
        path: /tmp/bucardo
      tags: packages

    - name: Unarchive Bucardo
      unarchive:
        src: /tmp/bucardo.tar.gz
        dest: /tmp/bucardo
        copy: no
      tags: packages

    - name: Build Bucardo Makefile
      shell: "perl Makefile.PL"
      args:
        chdir: /tmp/bucardo/Bucardo-5.3.1/
      tags: packages

    - name: Make Bucardo
      shell: "make"
      args:
        chdir: /tmp/bucardo/Bucardo-5.3.1/
      tags: packages

    - name: Install Bucardo
      shell: "sudo make install"
      args:
        chdir: /tmp/bucardo/Bucardo-5.3.1/
      tags: packages

    
    - name: Create bucardo log directory
      file:
        state: directory
        path: /var/log/bucardo
  
    - name: Install bucardo
      shell: |
        set timeout 300
        spawn bucardo install --pid-dir /var/run --dbuser postgres --dbname postgres

        expect "to quit:"
        send P\n
        interact
        exit 0
      args:
        executable: /usr/bin/expect

  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted



- hosts: db1
  become: yes
  tasks:
    - name: "Add local master db to Bucardo"
      shell: "bucardo add database db1 dbname=gitbucket host=127.0.0.1 user=gitbucket password=gitbucket"
      
      

    - name: Add external  second master to Bucardo
      shell: "bucardo add database db2 dbname=gitbucket host= user=gitbucket dbpass=gitbucket"
      
    - name: Add external  third master to Bucardo
      shell: "bucardo add database db3 dbname=gitbucket host= user=gitbucket dbpass=gitbucket" 

    - name: Add tables to Bucardo
      shell: "bucardo add table all --db=db1 --herd=gitbucket_herd"
     
    
    - name: Add sequances to Bucardo
      shell: "bucardo add sequence all --db=db1 --herd=gitbucket_herd"
      

    - name: Create dbgroup
      shell: "bucardo add dbgroup gitbucket_group"
      

    - name: Add db1 as master
      shell: "bucardo add dbgroup gitbucket_group db1:source"
      
    
    - name: Add db2 as master
      shell: "bucardo add dbgroup gitbucket_group db2:source"
      
    - name: Add db3 as master
      shell: "bucardo add dbgroup gitbucket_group db3:source"

    - name: Add sync
      shell: "bucardo add sync gitbucket_sync herd=gitbucket_herd dbgroup=gitbucket_group"
      
    
    - name: Restart Bucardo
      shell: "bucardo restart"
      

    

  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted

