---
- hosts: all
  become: yes
  tasks:
    
    - name: "Install PostgreSQL"
      yum:
        name: 
          - postgresql
          - postgresql-server
          - python-psycopg2

    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: "Initialize PostgreSQL"
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists

    - name: "Start and enable services"
      service: name=postgresql state=started enabled=yes
    
    - name: "Create app database"
      postgresql_db:
        state: present
        name: "gitbucket"
      become: yes
      become_user: postgres

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "gitbucket"
        password: "gitbucket"
      become: yes
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "gitbucket"
        roles: "gitbucket"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: "~/data/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: "gitbucket"
        source: 0.0.0.0/0
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres
 
   # - name: "Load SQL script into a variable"
  #  set_fact:
    #    migration_sql: "{{ lookup('file', 'conf/migration.sql') }}"

    #- name: "Execute script from variable"
    #  command: "psql {{ db_name }} -c {{ migration_sql }}"
    #  become_user: postgres
    #  register: sql_response_variable

  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted

